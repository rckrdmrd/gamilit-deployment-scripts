version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: gamilit-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-gamilit_platform}
      POSTGRES_USER: ${DB_USER:-gamilit_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-gamilit_secure_2024}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../../docs/03-desarrollo/base-de-datos/ddl:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-gamilit_user} -d ${DB_NAME:-gamilit_platform}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - gamilit-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: gamilit-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: ${PORT:-3001}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-gamilit_platform}
      DB_USER: ${DB_USER:-gamilit_user}
      DB_PASSWORD: ${DB_PASSWORD:-gamilit_secure_2024}
      DB_SSL: ${DB_SSL:-false}
      DB_POOL_MIN: ${DB_POOL_MIN:-2}
      DB_POOL_MAX: ${DB_POOL_MAX:-10}
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_here_change_in_production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN:-30d}
      BCRYPT_ROUNDS: ${BCRYPT_ROUNDS:-10}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
      LOG_LEVEL: ${LOG_LEVEL:-info}
    ports:
      - "${PORT:-3001}:3001"
    volumes:
      # Mount source code for hot reload in development
      - ./backend/src:/app/src:ro
      - ./backend/package.json:/app/package.json:ro
      - ./backend/tsconfig.json:/app/tsconfig.json:ro
      # Named volume for node_modules (improves performance)
      - backend_node_modules:/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - gamilit-network

volumes:
  # PostgreSQL data persistence
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/data/postgres

  # Backend node_modules (improves performance)
  backend_node_modules:

networks:
  gamilit-network:
    driver: bridge
    name: gamilit-network
